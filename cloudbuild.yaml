steps:
  # Step 1: Build Angular frontend
  - name: node:18
    dir: buy-and-sell/
    entrypoint: bash
    secretEnv:
      - firebase_api_key_secret
      - firebase_auth_domain
      - firebase_project_id
      - firebase_storage_bucket
      - firebase_msg_sender_id
      - firebase_app_id
      - firebase_measurement_id
    args:
      - -c
      - |
        echo "Creating environment.ts"
        mkdir -p src/environments
        echo "export const environment = {" > src/environments/environment.ts
        echo "  production: false," >> src/environments/environment.ts
        echo "  firebase: {" >> src/environments/environment.ts
        echo "    apiKey: \"${firebase_api_key_secret}\"," >> src/environments/environment.ts
        echo "    authDomain: \"${firebase_auth_domain}\"," >> src/environments/environment.ts
        echo "    projectId: \"${firebase_project_id}\"," >> src/environments/environment.ts
        echo "    storageBucket: \"${firebase_storage_bucket}\"," >> src/environments/environment.ts
        echo "    messagingSenderId: \"${firebase_msg_sender_id}\"," >> src/environments/environment.ts
        echo "    appId: \"${firebase_app_id}\"," >> src/environments/environment.ts
        echo "    measurementId: \"${firebase_measurement_id}\"" >> src/environments/environment.ts
        echo "  }" >> src/environments/environment.ts
        echo "};" >> src/environments/environment.ts
        npm install -g @angular/cli
        npm install
        ng build

  # Step 3: Clean and copy Angular build output into Spring Boot static resources
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - -c
      - |
          echo "Cleaning static folder"
          rm -rf java-backend/buy-and-sell/src/main/resources/static/*
          echo "==== Angular dist folder ===="
          find buy-and-sell/dist -type f
          echo "Copying Angular dist output to static"
          cp -r buy-and-sell/dist/browser/* java-backend/buy-and-sell/src/main/resources/static/
          echo "=== List of files in Spring Boot static folder (detailed) ==="
          ls -l java-backend/buy-and-sell/src/main/resources/static/
          echo "=== Find all files with details ==="
          find java-backend/buy-and-sell/src/main/resources/static/ -type f -exec ls -l {} \;

  # Step 2: Build Spring Boot app
  - name: 'gcr.io/cloud-builders/mvn'
    dir: java-backend/buy-and-sell
    args: ['clean', 'package', '-DskipTests']

  # # Step 4: Build Docker image
  # - name: 'gcr.io/cloud-builders/docker'
  #   args: ['build', '-t', 'gcr.io/$PROJECT_ID/buy-and-sell-app', 'java-backend/buy-and-sell']

  # # Step 5: Push Docker image
  # - name: 'gcr.io/cloud-builders/docker'
  #   args: ['push', 'gcr.io/$PROJECT_ID/buy-and-sell-app']

  # # Step 6: Deploy to Cloud Run
  # - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  #   args:
  #     - 'gcloud'
  #     - 'run'
  #     - 'deploy'
  #     - 'buy-and-sell-app'
  #     - '--image'
  #     - 'gcr.io/$PROJECT_ID/buy-and-sell-app'
  #     - '--region'
  #     - 'asia-southeast1'
  #     - '--platform'
  #     - 'managed'
  #     - '--allow-unauthenticated'

  # Step 6: Deploy to App Engine
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    dir: java-backend/buy-and-sell
    args: ['gcloud', 'app', 'deploy', 'app.yaml', '--quiet']

# REMOVE this section at the bottom
# images:
#   - gcr.io/$PROJECT_ID/buy-and-sell-app

options:
  logging: CLOUD_LOGGING_ONLY

availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/FIREBASE_API_KEY/versions/latest
      env: firebase_api_key_secret
    - versionName: projects/$PROJECT_ID/secrets/FIREBASE_AUTH_DOMAIN/versions/latest
      env: firebase_auth_domain
    - versionName: projects/$PROJECT_ID/secrets/FIREBASE_PROJECT_ID/versions/latest
      env: firebase_project_id
    - versionName: projects/$PROJECT_ID/secrets/FIREBASE_STORAGE_BUCKET/versions/latest
      env: firebase_storage_bucket
    - versionName: projects/$PROJECT_ID/secrets/FIREBASE_MSG_SENDER_ID/versions/latest
      env: firebase_msg_sender_id
    - versionName: projects/$PROJECT_ID/secrets/FIREBASE_APP_ID/versions/latest
      env: firebase_app_id
    - versionName: projects/$PROJECT_ID/secrets/FIREBASE_MEASUREMENT_ID/versions/latest
      env: firebase_measurement_id
